$custom-palette: (
  50 : #ffebea,
  100 : #ffccca,
  200 : #ffaaa6,
  300 : #ff8882,
  400 : #ff6f68,
  500 : #ff554d,
  600 : #ff4e46,
  700 : #ff443d,
  800 : #ff3b34,
  900 : #ff2a25,
  A100 : #ffffff,
  A200 : #ffffff,
  A400 : #ffd4d3,
  A700 : #ffbbb9,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #000000,
    500 : #000000,
    600 : #000000,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #000000,
    A700 : #000000,
  )
);
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$animation-showcase-primary: mat.define-palette(mat.$indigo-palette);
$animation-showcase-accent: mat.define-palette($custom-palette, 600, A100, 900);

// The warn palette is optional (defaults to red).
$animation-showcase-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$animation-showcase-theme: mat.define-light-theme((
  color: (
    primary: $animation-showcase-primary,
    accent: $animation-showcase-accent,
    warn: $animation-showcase-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($animation-showcase-theme);


:root {
  --color-primary: hsl(3, 100%, 65%);
  --color-on-primary: hsl(0, 0%, 100%);
  --color-background: hsl(224, 45%, 11%);
  --color-on-backgorund: hsl(0, 0%, 100%);
  --color-outline: hsl(224, 45%, 23%);
  --color-backdrop: hsla(0, 0%, 0%, .38);

  --color-emphasis: hsl(224, 45%, 31%);
  --app-logo: url('assets/logo.svg');

  --gradient-stops: hsl(3, 100%, 90%), var(--color-primary), white;
}

* {
  margin: unset;
  box-sizing: border-box;
  font-family: "Campton", Sans-serif;;
}

html, body {
  height: 100vh;
}

header {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

}


h1 {
  color: transparent;
  font-size: 5rem;
  background-image: linear-gradient(to right, var(--gradient-stops));
  -webkit-background-clip: text;
  background-clip: text;
}

h3 {
  font-size: 3rem;
}

a {
  position: relative;
  text-decoration: none;
  color: var(--color-on-backgorund);
  z-index: 20;

  &:hover {
    &::after {
      content: '';
      width: 100%;
      height: 4px;
      position: absolute;
      background-color: var(--color-primary);
      bottom: -0.25rem;
      z-index: 10;

    }
  }
}

input {
  outline: unset;
  border: 2px solid var(--color-outline);
  padding: 0.25rem;
  border-radius: 0.5rem;
  font-size: 1.25rem;
  background-color: hsl(224, 50%, 15%);
  color: var(--color-on-backgorund);

  &::placeholder {
    color: hsl(224, 50%, 80%);
  }


  &:focus-visible {
    border: 2px solid var(--color-primary);
  }
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-slider-track-background {
  background-color: #ffffff;
}

.mat-slider:hover .mat-slider-track-background, .mat-slider.cdk-focused .mat-slider-track-background {
  background-color: #ffffff;
}

.mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {
  border-color: var(--color-primary);
  background-color: transparent;
}

.mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {
  border-color: var(--color-primary);
}
